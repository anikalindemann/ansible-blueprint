tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.4.4/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.5/plugin.yaml
  - types/aws-ansible-types.yaml

#####################################################################################
# inputs section allows the user to use same
# blueprint for creating different deployments, each one
# with its own parameters.
# to specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.json
#####################################################################################

inputs:

  image:
    description: >
      Image to be used when launching agent VM's

  size:
    description: >
      Flavor of the agent VM's

  agent_user:
    description: >
      User for connecting to agent VM's

  agent_private_key_path:
    default: /root/.ssh/agent_key.pem
    type: string

  aws_access_key_id:
    description: YOUR AWS ACCESS KEY ID

  aws_secret_access_key:
    description: YOUR AWS SECRET ACCESS KEY

  ec2_region_name:
    default: us-east-1

  ec2_region_endpoint:
    default: ec2.us-east-1.amazonaws.com

  aws_configuration:
    default:
      aws_access_key_id: { get_input: aws_access_key_id }
      aws_secret_access_key: { get_input: aws_secret_access_key }
      ec2_region_name: { get_input: ec2_region_name }
      ec2_region_endpoint: { get_input: ec2_region_endpoint }

node_templates:

  ansible:
    type: ansible.nodes.Ansible
    properties:
      playbook_file_name: main.yaml
      public_ip: { get_attribute: [application_ip, aws_resource_id] }
    relationships:
      - type: ansible.relationships.contained_in
        target: host

  mongod:
    type: ansible.nodes.MongoDatabase
    properties:
      public_ip: { get_attribute: [application_ip, aws_resource_id] }
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: ansible.relationships.provisioned_by
        target: ansible

  nodejs:
    type: ansible.nodes.NodecellarApplicationModule
    properties:
      public_ip: { get_attribute: [application_ip, aws_resource_id] }
    relationships:
      - type: cloudify.relationships.contained_in
        target: host
      - type: ansible.relationships.provisioned_by
        target: ansible
      - type: node_connected_to_mongo
        target: mongod

  host:
    type: cloudify.aws.nodes.Instance
    properties:
      aws_config: { get_input: aws_configuration }
      image_id: { get_input: image }
      instance_type: { get_input: size }
      agent_config:
        user: { get_input: agent_user }
        key: { get_input: agent_private_key_path}
        install_method: remote
    relationships:
      - target: application_ip
        type: cloudify.aws.relationships.instance_connected_to_elastic_ip
      - target: application_security_group
        type: cloudify.aws.relationships.instance_connected_to_security_group

  application_ip:
    type: cloudify.aws.nodes.ElasticIP
    properties:
      aws_config: { get_input: aws_configuration }

  application_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      aws_config: { get_input: aws_configuration }
      description: Security Group for ansible VMs
      rules:
        - ip_protocol: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0

###########################################################
# This outputs section exposes the application endpoint.
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ application_ip, aws_resource_id ] }
      port: 8080
